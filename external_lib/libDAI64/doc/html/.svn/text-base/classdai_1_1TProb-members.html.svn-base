<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>libDAI: Member List</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li><a href="dirs.html"><span>Directories</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>dai::TProb&lt; T &gt; Member List</h1>This is the complete list of members for <a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a>, including all inherited members.<p><table>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#d89f2c6966d7cf7d61dae9dc2dcd1e2d">abs</a>() const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#b9357d8976414f99e230c17261377d33">dist</a>(const TProb&lt; T &gt; &amp;p, const TProb&lt; T &gt; &amp;q, DistType dt)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [friend]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>DISTKL</b> enum value (defined in <a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a>)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>DISTL1</b> enum value (defined in <a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a>)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>DISTLINF</b> enum value (defined in <a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a>)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>DISTTV</b> enum value (defined in <a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a>)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#492487fd71f6e87673853e5e2fda2f27">DistType</a> enum name</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#e8de1a2b3da02cea030d8d84e975d7b2">divide</a>(const TProb&lt; T &gt; &amp;q)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#93b4b55c0ade960ed9b7523405f50854">entropy</a>() const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#50ca204e2127206670b8dd1abca386a5">exp</a>() const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#3689cfd281f04418c9e38e9ac1900a1b">fill</a>(T x)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#b6a4ee056d92a0d59aab7cc0e141fd68">hasNaNs</a>() const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#aeabc65b661d9aa8b1321c7fcece7da4">hasNegatives</a>() const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#ceffba52dcb0053ac26deb8442539be8">hasNonPositives</a>() const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#d6cbd3faba7d7fb19dae43b5fc7b05c9">inverse</a>(bool zero=false) const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#df48fa2efe5f23ad00ce16058c91953f">log</a>() const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#ff15b2194fe4f15e962ac9afed0b20b3">log0</a>() const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#4adfaa532006cfe1c19141a78469a787">makePositive</a>(Real epsilon)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#0373bb829c4c88ea74c326b6f4385a43">makeZero</a>(Real epsilon)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#55b056b8834e159f4551136728bdb36a">maxAbs</a>() const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#e4d9d19c9d0ef86e69852684622c139f">maxVal</a>() const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#6ce944b2c6ba4c1cfe0c2d564d12e5a5">minVal</a>() const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#f02925c99dbafb3c5c53add53d581bc2">normalize</a>(NormType norm=NORMPROB)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#7e6039d541a2d8eecb223803d641c49d">normalized</a>(NormType norm=NORMPROB) const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>NORMLINF</b> enum value (defined in <a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a>)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>NORMPROB</b> enum value (defined in <a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a>)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#31d9206096f52574dbd24cbb2502080c">NormType</a> enum name</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#2026e865ea6dfafb3d5a6d0e59e85902">operator*</a>(T x) const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#e3ca229a6be0b1949a9431e51ba765e4">operator*</a>(const TProb&lt; T &gt; &amp;q) const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#a1bcc069dfbdc09f577255cf57201534">operator*=</a>(T x)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#afd5fa074210c4d0f135db0b7ae78564">operator*=</a>(const TProb&lt; T &gt; &amp;q)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#b28e4fb9d90f886763305a4a541cd81e">operator+</a>(T x) const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#c463f4d9883705539a8e707d2ab35fdf">operator+</a>(const TProb&lt; T &gt; &amp;q) const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#8afe53893e4cc203d650a883320af400">operator+=</a>(T x)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#7fc01ebf107a1a7f770771059d10d809">operator+=</a>(const TProb&lt; T &gt; &amp;q)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#0d8a626e4ad9490232b9781711bc734e">operator-</a>(T x) const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#4e607fcb8a1feb9987c1ecf51947a44a">operator-</a>(const TProb&lt; T &gt; &amp;q) const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#88c7008673408160472513670deec3e7">operator-=</a>(T x)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#c928c35ab6f3489d9d107360185b14eb">operator-=</a>(const TProb&lt; T &gt; &amp;q)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#d303957b01e97aa2adef2d811ed1a29b">operator/</a>(T x) const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#1f0009d733883a95657b198f1ed4ee76">operator/</a>(const TProb&lt; T &gt; &amp;q) const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#ccbcb269e889aab6128a96f101833644">operator/=</a>(T x)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#f37735e848ce38640604e2f8046a800b">operator/=</a>(const TProb&lt; T &gt; &amp;q)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#69d2223fac859e2c372826a1eecdf55e">operator&lt;&lt;</a>(std::ostream &amp;os, const TProb&lt; T &gt; &amp;P)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#c8b541a8d26894b80658607b2602d8c8">operator&lt;=</a>(const TProb&lt; T &gt; &amp;q) const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#a349fd5cb6373a5268f7ad6caa41c03b">operator[]</a>(size_t i) const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#e305a0821f4afacf5a324297cc6fdb99">operator[]</a>(size_t i)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#e40363175a9cdaeceb038e2bccaaa7d2">operator^</a>(Real a) const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#33860a9d4e3b5c94add50fe0a7db4ec2">operator^=</a>(Real a)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#408eb13e9e57cbf19c1d03218f7781ee">p</a>() const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#18a38409fa138e021c2dd90fd1303fe0">p</a>()</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#4a4e6fcb0008c8d4a36ac90c7b960ee4">randomize</a>()</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#a6bbe8ec97718030d2e029edbd5b47c7">sgn</a>() const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#8bfc7de7f2a1ed95cb129d0467c7b88d">size</a>() const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#5b930446181afe0a2114244703de4259">takeExp</a>()</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#76eb7f2ee5d018098b0c285f7c0f301c">takeLog</a>()</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#224768de2c85c548ed3b5c048b5f06ce">takeLog0</a>()</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#e521e8c536e407a0c26ab31584f800c7">totalSum</a>() const </td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#81f9393fa860a6bb005c8286bf9aceab">TProb</a>()</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#851cd9b5be495df487fb177b0e06a1dd">TProb</a>(size_t n)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline, explicit]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#de3ff7ee6617e3ae59dd8c4e4fb146f3">TProb</a>(size_t n, Real p)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classdai_1_1TProb.html#b139b37cc0533d119a55054a574987a5">TProb</a>(size_t n, const Real *p)</td><td><a class="el" href="classdai_1_1TProb.html">dai::TProb&lt; T &gt;</a></td><td><code> [inline]</code></td></tr>
</table></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Wed Jun 8 10:17:08 2011 for libDAI by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6 </small></address>
</body>
</html>
