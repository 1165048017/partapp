<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>libDAI: include/dai/util.h File Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li><a href="dirs.html"><span>Directories</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="dir_788dec3f6cf4a9394427425a1f1fc617.html">include</a>&nbsp;&raquo&nbsp;<a class="el" href="dir_240a4880a980807f35cfca6c0dacf24f.html">dai</a>
  </div>
</div>
<div class="contents">
<h1>util.h File Reference</h1><hr><a name="_details"></a><h2>Detailed Description</h2>
Defines general utility functions and adds an abstraction layer for platform-dependent functionality. 
<p>

<p>
<code>#include &lt;vector&gt;</code><br>
<code>#include &lt;set&gt;</code><br>
<code>#include &lt;map&gt;</code><br>
<code>#include &lt;iostream&gt;</code><br>
<code>#include &lt;cstdio&gt;</code><br>
<code>#include &lt;boost/foreach.hpp&gt;</code><br>
<code>#include &lt;algorithm&gt;</code><br>
<code>#include &lt;tr1/unordered_map&gt;</code><br>

<p>
<a href="util_8h-source.html">Go to the source code of this file.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Namespaces</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">namespace &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedai.html">dai</a></td></tr>

<tr><td colspan="2"><br><h2>Classes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdai_1_1hash__map.html">dai::hash_map&lt; T, U &gt;</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="classdai_1_1hash__map.html" title="hash_map is an alias for std::tr1::unordered_map.">hash_map</a> is an alias for std::tr1::unordered_map.  <a href="classdai_1_1hash__map.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdai_1_1Diffs.html">dai::Diffs</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Used to keep track of the progress made by iterative algorithms.  <a href="classdai_1_1Diffs.html#_details">More...</a><br></td></tr>
<tr><td colspan="2"><br><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="85d9ac269eba33293361f4ed7c2a697b"></a><!-- doxytag: member="util.h::foreach" ref="85d9ac269eba33293361f4ed7c2a697b" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="util_8h.html#85d9ac269eba33293361f4ed7c2a697b">foreach</a>&nbsp;&nbsp;&nbsp;BOOST_FOREACH</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">An alias to the BOOST_FOREACH macro from the <a class="el" href="util_8h.html#85d9ac269eba33293361f4ed7c2a697b" title="An alias to the BOOST_FOREACH macro from the boost::foreach library.">boost::foreach</a> library. <br></td></tr>
<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b27c0799ddef29bb3833477e32c53862"></a><!-- doxytag: member="util.h::toc" ref="b27c0799ddef29bb3833477e32c53862" args="()" -->
double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedai.html#b27c0799ddef29bb3833477e32c53862">dai::toc</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the time in seconds. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e699eca7ca4d6e971b54c2b4a95942d4"></a><!-- doxytag: member="util.h::rnd_seed" ref="e699eca7ca4d6e971b54c2b4a95942d4" args="(size_t seed)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedai.html#e699eca7ca4d6e971b54c2b4a95942d4">dai::rnd_seed</a> (size_t seed)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the random seed. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="409fb3c0ffc14bf9e03a45014a9b4093"></a><!-- doxytag: member="util.h::rnd_uniform" ref="409fb3c0ffc14bf9e03a45014a9b4093" args="()" -->
double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedai.html#409fb3c0ffc14bf9e03a45014a9b4093">dai::rnd_uniform</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns a real number, distributed uniformly on [0,1). <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4367d2d1c1518023dd91b645d641fce7"></a><!-- doxytag: member="util.h::rnd_stdnormal" ref="4367d2d1c1518023dd91b645d641fce7" args="()" -->
double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedai.html#4367d2d1c1518023dd91b645d641fce7">dai::rnd_stdnormal</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns a real number from a standard-normal distribution. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c02317b960b112637976333f90d1f937"></a><!-- doxytag: member="util.h::rnd_int" ref="c02317b960b112637976333f90d1f937" args="(int min, int max)" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacedai.html#c02317b960b112637976333f90d1f937">dai::rnd_int</a> (int min, int max)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns a random integer in interval [min, max]. <br></td></tr>
<tr><td class="memTemplParams" nowrap colspan="2"><a class="anchor" name="1a0b1c88c46fb8763c2c783cc3fe9a62"></a><!-- doxytag: member="util.h::operator&lt;&lt;" ref="1a0b1c88c46fb8763c2c783cc3fe9a62" args="(std::ostream &amp;os, const std::vector&lt; T &gt; &amp;x)" -->
template&lt;class T&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">std::ostream &amp;&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacedai.html#1a0b1c88c46fb8763c2c783cc3fe9a62">dai::operator&lt;&lt;</a> (std::ostream &amp;os, const std::vector&lt; T &gt; &amp;x)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Writes a std::vector to a std::ostream. <br></td></tr>
<tr><td class="memTemplParams" nowrap colspan="2"><a class="anchor" name="4f8ad5d0c47c7fdfe17e5d0f4c0a32d9"></a><!-- doxytag: member="util.h::operator&lt;&lt;" ref="4f8ad5d0c47c7fdfe17e5d0f4c0a32d9" args="(std::ostream &amp;os, const std::set&lt; T &gt; &amp;x)" -->
template&lt;class T&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">std::ostream &amp;&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacedai.html#4f8ad5d0c47c7fdfe17e5d0f4c0a32d9">dai::operator&lt;&lt;</a> (std::ostream &amp;os, const std::set&lt; T &gt; &amp;x)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Writes a std::set to a std::ostream. <br></td></tr>
<tr><td class="memTemplParams" nowrap colspan="2"><a class="anchor" name="5913957fb1c3c3d3fbd1f3102b8eb04c"></a><!-- doxytag: member="util.h::operator&lt;&lt;" ref="5913957fb1c3c3d3fbd1f3102b8eb04c" args="(std::ostream &amp;os, const std::map&lt; T1, T2 &gt; &amp;x)" -->
template&lt;class T1, class T2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">std::ostream &amp;&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacedai.html#5913957fb1c3c3d3fbd1f3102b8eb04c">dai::operator&lt;&lt;</a> (std::ostream &amp;os, const std::map&lt; T1, T2 &gt; &amp;x)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Writes a std::map to a std::ostream. <br></td></tr>
<tr><td class="memTemplParams" nowrap colspan="2"><a class="anchor" name="575f6202aa88de6bf5146b85d8832eb5"></a><!-- doxytag: member="util.h::operator&lt;&lt;" ref="575f6202aa88de6bf5146b85d8832eb5" args="(std::ostream &amp;os, const std::pair&lt; T1, T2 &gt; &amp;x)" -->
template&lt;class T1, class T2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">std::ostream &amp;&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacedai.html#575f6202aa88de6bf5146b85d8832eb5">dai::operator&lt;&lt;</a> (std::ostream &amp;os, const std::pair&lt; T1, T2 &gt; &amp;x)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Writes a std::pair to a std::ostream. <br></td></tr>
</table>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Wed Jun 8 10:17:04 2011 for libDAI by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6 </small></address>
</body>
</html>
