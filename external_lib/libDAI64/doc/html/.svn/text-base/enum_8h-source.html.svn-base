<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>libDAI: include/dai/enum.h Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li><a href="dirs.html"><span>Directories</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="dir_788dec3f6cf4a9394427425a1f1fc617.html">include</a>&nbsp;&raquo&nbsp;<a class="el" href="dir_240a4880a980807f35cfca6c0dacf24f.html">dai</a>
  </div>
</div>
<div class="contents">
<h1>enum.h</h1><a href="enum_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*  Copyright (C) 2006-2008  Joris Mooij  [joris dot mooij at tuebingen dot mpg dot de]</span>
<a name="l00002"></a>00002 <span class="comment">    Radboud University Nijmegen, The Netherlands /</span>
<a name="l00003"></a>00003 <span class="comment">    Max Planck Institute for Biological Cybernetics, Germany</span>
<a name="l00004"></a>00004 <span class="comment"></span>
<a name="l00005"></a>00005 <span class="comment">    This file is part of libDAI.</span>
<a name="l00006"></a>00006 <span class="comment"></span>
<a name="l00007"></a>00007 <span class="comment">    libDAI is free software; you can redistribute it and/or modify</span>
<a name="l00008"></a>00008 <span class="comment">    it under the terms of the GNU General Public License as published by</span>
<a name="l00009"></a>00009 <span class="comment">    the Free Software Foundation; either version 2 of the License, or</span>
<a name="l00010"></a>00010 <span class="comment">    (at your option) any later version.</span>
<a name="l00011"></a>00011 <span class="comment"></span>
<a name="l00012"></a>00012 <span class="comment">    libDAI is distributed in the hope that it will be useful,</span>
<a name="l00013"></a>00013 <span class="comment">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00015"></a>00015 <span class="comment">    GNU General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment"></span>
<a name="l00017"></a>00017 <span class="comment">    You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment">    along with libDAI; if not, write to the Free Software</span>
<a name="l00019"></a>00019 <span class="comment">    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA</span>
<a name="l00020"></a>00020 <span class="comment">*/</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 <span class="preprocessor">#ifndef __defined_libdai_enum_h</span>
<a name="l00028"></a>00028 <span class="preprocessor"></span><span class="preprocessor">#define __defined_libdai_enum_h</span>
<a name="l00029"></a>00029 <span class="preprocessor"></span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;cstring&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;iostream&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;<a class="code" href="exceptions_8h.html" title="Defines Exception class and the DAI_THROW macro.">dai/exceptions.h</a>&gt;</span>
<a name="l00034"></a>00034 
<a name="l00035"></a>00035 
<a name="l00037"></a>00037 
<a name="l00047"></a><a class="code" href="enum_8h.html#9961c92e7b9e3b0ccba5fe62731178c3">00047</a> <span class="preprocessor">#define DAI_ENUM(x,val0,...) class x {\</span>
<a name="l00048"></a>00048 <span class="preprocessor">    public:\</span>
<a name="l00049"></a>00049 <span class="preprocessor">        enum value {val0,__VA_ARGS__};\</span>
<a name="l00050"></a>00050 <span class="preprocessor">\</span>
<a name="l00051"></a>00051 <span class="preprocessor">        x() : v(val0) {}\</span>
<a name="l00052"></a>00052 <span class="preprocessor">\</span>
<a name="l00053"></a>00053 <span class="preprocessor">        x(value w) : v(w) {}\</span>
<a name="l00054"></a>00054 <span class="preprocessor">\</span>
<a name="l00055"></a>00055 <span class="preprocessor">        x(char const *w) {\</span>
<a name="l00056"></a>00056 <span class="preprocessor">            static char const* labelstring = #val0 "," #__VA_ARGS__ ",";\</span>
<a name="l00057"></a>00057 <span class="preprocessor">            size_t pos_begin = 0;\</span>
<a name="l00058"></a>00058 <span class="preprocessor">            size_t i = 0;\</span>
<a name="l00059"></a>00059 <span class="preprocessor">            for( size_t pos_end = 0; labelstring[pos_end] != '\0'; pos_end++ )\</span>
<a name="l00060"></a>00060 <span class="preprocessor">                if( (labelstring[pos_end] == ',') ) {\</span>
<a name="l00061"></a>00061 <span class="preprocessor">                    if( (strlen( w ) == pos_end - pos_begin) &amp;&amp; (strncmp( labelstring + pos_begin, w, pos_end - pos_begin ) == 0) ) {\</span>
<a name="l00062"></a>00062 <span class="preprocessor">                        v = (value)i;\</span>
<a name="l00063"></a>00063 <span class="preprocessor">                        return;\</span>
<a name="l00064"></a>00064 <span class="preprocessor">                    } else {\</span>
<a name="l00065"></a>00065 <span class="preprocessor">                        i++;\</span>
<a name="l00066"></a>00066 <span class="preprocessor">                        pos_begin = pos_end + 1;\</span>
<a name="l00067"></a>00067 <span class="preprocessor">                    }\</span>
<a name="l00068"></a>00068 <span class="preprocessor">                }\</span>
<a name="l00069"></a>00069 <span class="preprocessor">            DAI_THROW(UNKNOWN_ENUM_VALUE);\</span>
<a name="l00070"></a>00070 <span class="preprocessor">        }\</span>
<a name="l00071"></a>00071 <span class="preprocessor">\</span>
<a name="l00072"></a>00072 <span class="preprocessor">        operator value() const { return v; }\</span>
<a name="l00073"></a>00073 <span class="preprocessor">\</span>
<a name="l00074"></a>00074 <span class="preprocessor">        operator size_t() const { return (size_t)v; }\</span>
<a name="l00075"></a>00075 <span class="preprocessor">\</span>
<a name="l00076"></a>00076 <span class="preprocessor">        operator char const*() const {\</span>
<a name="l00077"></a>00077 <span class="preprocessor">            static char labelstring[] = #val0 "," #__VA_ARGS__;\</span>
<a name="l00078"></a>00078 <span class="preprocessor">            size_t pos_begin = 0;\</span>
<a name="l00079"></a>00079 <span class="preprocessor">            size_t i = 0;\</span>
<a name="l00080"></a>00080 <span class="preprocessor">            for( size_t pos_end = 0; ; pos_end++ )\</span>
<a name="l00081"></a>00081 <span class="preprocessor">                if( (labelstring[pos_end] == ',') || (labelstring[pos_end] == '\0') ) {\</span>
<a name="l00082"></a>00082 <span class="preprocessor">                    if( (size_t)v == i ) {\</span>
<a name="l00083"></a>00083 <span class="preprocessor">                        labelstring[pos_end] = '\0';\</span>
<a name="l00084"></a>00084 <span class="preprocessor">                        return labelstring + pos_begin;\</span>
<a name="l00085"></a>00085 <span class="preprocessor">                    } else {\</span>
<a name="l00086"></a>00086 <span class="preprocessor">                        i++;\</span>
<a name="l00087"></a>00087 <span class="preprocessor">                        pos_begin = pos_end + 1;\</span>
<a name="l00088"></a>00088 <span class="preprocessor">                    }\</span>
<a name="l00089"></a>00089 <span class="preprocessor">                }\</span>
<a name="l00090"></a>00090 <span class="preprocessor">        }\</span>
<a name="l00091"></a>00091 <span class="preprocessor">\</span>
<a name="l00092"></a>00092 <span class="preprocessor">        friend std::istream&amp; operator &gt;&gt; (std::istream&amp; is, x&amp; y) {\</span>
<a name="l00093"></a>00093 <span class="preprocessor">            std::string s;\</span>
<a name="l00094"></a>00094 <span class="preprocessor">            is &gt;&gt; s;\</span>
<a name="l00095"></a>00095 <span class="preprocessor">            y = x(s.c_str());\</span>
<a name="l00096"></a>00096 <span class="preprocessor">            return is;\</span>
<a name="l00097"></a>00097 <span class="preprocessor">        }\</span>
<a name="l00098"></a>00098 <span class="preprocessor">\</span>
<a name="l00099"></a>00099 <span class="preprocessor">        friend std::ostream&amp; operator &lt;&lt; (std::ostream&amp; os, const x&amp; y) {\</span>
<a name="l00100"></a>00100 <span class="preprocessor">            os &lt;&lt; (const char *)y;\</span>
<a name="l00101"></a>00101 <span class="preprocessor">            return os;\</span>
<a name="l00102"></a>00102 <span class="preprocessor">        }\</span>
<a name="l00103"></a>00103 <span class="preprocessor">\</span>
<a name="l00104"></a>00104 <span class="preprocessor">    private:\</span>
<a name="l00105"></a>00105 <span class="preprocessor">        value v;\</span>
<a name="l00106"></a>00106 <span class="preprocessor">};</span>
<a name="l00107"></a>00107 <span class="preprocessor"></span>
<a name="l00108"></a>00108 
<a name="l00109"></a>00109 <span class="preprocessor">#endif</span>
</pre></div></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Wed Jun 8 10:17:04 2011 for libDAI by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6 </small></address>
</body>
</html>
