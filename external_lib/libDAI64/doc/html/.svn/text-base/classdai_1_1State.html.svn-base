<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>libDAI: dai::State Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li><a href="dirs.html"><span>Directories</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespacedai.html">dai</a>::<a class="el" href="classdai_1_1State.html">State</a>
  </div>
</div>
<div class="contents">
<h1>dai::State Class Reference</h1><!-- doxytag: class="dai::State" --><code>#include &lt;<a class="el" href="index_8h-source.html">dai/index.h</a>&gt;</code>
<p>

<p>
<a href="classdai_1_1State-members.html">List of all members.</a><hr><a name="_details"></a><h2>Detailed Description</h2>
Contains the joint state of variables within a <a class="el" href="classdai_1_1VarSet.html" title="Represents a set of variables.">VarSet</a> and useful things to do with this information. 
<p>
This is very similar to a <a class="el" href="classdai_1_1MultiFor.html" title="MultiFor makes it easy to perform a dynamic number of nested for loops.">MultiFor</a>, but tailored for Vars and Varsets. <table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ab03f6a5dc8d23f79e0966698f783178"></a><!-- doxytag: member="dai::State::State" ref="ab03f6a5dc8d23f79e0966698f783178" args="()" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdai_1_1State.html#ab03f6a5dc8d23f79e0966698f783178">State</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Default constructor. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="7c0fe7267ffd7c530283f2444112a162"></a><!-- doxytag: member="dai::State::State" ref="7c0fe7267ffd7c530283f2444112a162" args="(const VarSet &amp;vs)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdai_1_1State.html#7c0fe7267ffd7c530283f2444112a162">State</a> (const <a class="el" href="classdai_1_1VarSet.html">VarSet</a> &amp;vs)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Initialize from <a class="el" href="classdai_1_1VarSet.html" title="Represents a set of variables.">VarSet</a>. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4ab3583f63942a65c969f4195b508b5b"></a><!-- doxytag: member="dai::State::State" ref="4ab3583f63942a65c969f4195b508b5b" args="(const State &amp;x)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdai_1_1State.html#4ab3583f63942a65c969f4195b508b5b">State</a> (const <a class="el" href="classdai_1_1State.html">State</a> &amp;x)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Copy constructor. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="433ced7a70001f4905404c31f09ca9da"></a><!-- doxytag: member="dai::State::operator=" ref="433ced7a70001f4905404c31f09ca9da" args="(const State &amp;x)" -->
<a class="el" href="classdai_1_1State.html">State</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdai_1_1State.html#433ced7a70001f4905404c31f09ca9da">operator=</a> (const <a class="el" href="classdai_1_1State.html">State</a> &amp;x)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Assignment operator. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="24d846f8b341073a44191e71b14df219"></a><!-- doxytag: member="dai::State::operator size_t" ref="24d846f8b341073a44191e71b14df219" args="() const " -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdai_1_1State.html#24d846f8b341073a44191e71b14df219">operator size_t</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return linear state. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">size_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdai_1_1State.html#9d4d70438065731f337963da7bff7e61">operator()</a> (const <a class="el" href="classdai_1_1Var.html">Var</a> &amp;n) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">size_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdai_1_1State.html#475a14df77520317788c13a3386c3e16">operator()</a> (const <a class="el" href="classdai_1_1VarSet.html">VarSet</a> &amp;vs) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e85f3b76bd05070b75b49fd020f4bff6"></a><!-- doxytag: member="dai::State::operator++" ref="e85f3b76bd05070b75b49fd020f4bff6" args="(int)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdai_1_1State.html#e85f3b76bd05070b75b49fd020f4bff6">operator++</a> (int)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Postfix increment operator. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="08f7e2c1906e32e95dbad09ad26369d2"></a><!-- doxytag: member="dai::State::valid" ref="08f7e2c1906e32e95dbad09ad26369d2" args="() const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classdai_1_1State.html#08f7e2c1906e32e95dbad09ad26369d2">valid</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if the current state is valid. <br></td></tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="9d4d70438065731f337963da7bff7e61"></a><!-- doxytag: member="dai::State::operator()" ref="9d4d70438065731f337963da7bff7e61" args="(const Var &amp;n) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t dai::State::operator()           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classdai_1_1Var.html">Var</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>n</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Return state of variable n, or zero if n is not in this <a class="el" href="classdai_1_1State.html" title="Contains the joint state of variables within a VarSet and useful things to do with...">State</a> 
</div>
</div><p>
<a class="anchor" name="475a14df77520317788c13a3386c3e16"></a><!-- doxytag: member="dai::State::operator()" ref="475a14df77520317788c13a3386c3e16" args="(const VarSet &amp;vs) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t dai::State::operator()           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classdai_1_1VarSet.html">VarSet</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>vs</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Return linear state of variables in varset, setting them to zero if they are not in this <a class="el" href="classdai_1_1State.html" title="Contains the joint state of variables within a VarSet and useful things to do with...">State</a> 
</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li>include/dai/<a class="el" href="index_8h-source.html">index.h</a></ul>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Wed Jun 8 10:17:07 2011 for libDAI by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6 </small></address>
</body>
</html>
