\hypertarget{classdai_1_1MR}{
\section{dai::MR Class Reference}
\label{classdai_1_1MR}\index{dai::MR@{dai::MR}}
}
{\tt \#include $<$dai/mr.h$>$}

Inheritance diagram for dai::MR::\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[height=3cm]{classdai_1_1MR}
\end{center}
\end{figure}


\subsection{Detailed Description}
Approximate inference algorithm by Montanari and Rizzo. \subsection*{Public Member Functions}
\begin{CompactItemize}
\item 
\hypertarget{classdai_1_1MR_0630645bffa9da4cb4df84e65d47ea7c}{
\hyperlink{classdai_1_1MR_0630645bffa9da4cb4df84e65d47ea7c}{MR} ()}
\label{classdai_1_1MR_0630645bffa9da4cb4df84e65d47ea7c}

\begin{CompactList}\small\item\em Default constructor. \item\end{CompactList}\item 
\hypertarget{classdai_1_1MR_81d8a3ad4ba4a373d4f1cfcf546b0576}{
\hyperlink{classdai_1_1MR_81d8a3ad4ba4a373d4f1cfcf546b0576}{MR} (const \hyperlink{classdai_1_1MR}{MR} \&x)}
\label{classdai_1_1MR_81d8a3ad4ba4a373d4f1cfcf546b0576}

\begin{CompactList}\small\item\em Copy constructor. \item\end{CompactList}\item 
\hypertarget{classdai_1_1MR_8a4884294fcb69eac8c201f3ddd2285d}{
\hyperlink{classdai_1_1MR}{MR} \& \hyperlink{classdai_1_1MR_8a4884294fcb69eac8c201f3ddd2285d}{operator=} (const \hyperlink{classdai_1_1MR}{MR} \&x)}
\label{classdai_1_1MR_8a4884294fcb69eac8c201f3ddd2285d}

\begin{CompactList}\small\item\em Assignment operator. \item\end{CompactList}\item 
\hypertarget{classdai_1_1MR_58f561154d9c74ac2f39a3b13196857f}{
\hyperlink{classdai_1_1MR_58f561154d9c74ac2f39a3b13196857f}{MR} (const \hyperlink{classdai_1_1FactorGraph}{FactorGraph} \&fg, const \hyperlink{classdai_1_1PropertySet}{PropertySet} \&opts)}
\label{classdai_1_1MR_58f561154d9c74ac2f39a3b13196857f}

\begin{CompactList}\small\item\em Construct from \hyperlink{classdai_1_1FactorGraph}{FactorGraph} fg and \hyperlink{classdai_1_1PropertySet}{PropertySet} opts. \item\end{CompactList}\item 
\hypertarget{classdai_1_1DAIAlg_48ba6a58d10b8802d690e5e92ec5abe9}{
void \hyperlink{classdai_1_1DAIAlg_48ba6a58d10b8802d690e5e92ec5abe9}{backupFactor} (size\_\-t I)}
\label{classdai_1_1DAIAlg_48ba6a58d10b8802d690e5e92ec5abe9}

\begin{CompactList}\small\item\em Save factor I. \item\end{CompactList}\item 
\hypertarget{classdai_1_1DAIAlg_0176904d3b4b9d083288ea8c4a2dc8bc}{
void \hyperlink{classdai_1_1DAIAlg_0176904d3b4b9d083288ea8c4a2dc8bc}{backupFactors} (const \hyperlink{classdai_1_1VarSet}{VarSet} \&ns)}
\label{classdai_1_1DAIAlg_0176904d3b4b9d083288ea8c4a2dc8bc}

\begin{CompactList}\small\item\em Save Factors involving ns. \item\end{CompactList}\item 
\hypertarget{classdai_1_1DAIAlg_bf8dbd2797ec871e86566a6dfc0864e3}{
void \hyperlink{classdai_1_1DAIAlg_bf8dbd2797ec871e86566a6dfc0864e3}{restoreFactor} (size\_\-t I)}
\label{classdai_1_1DAIAlg_bf8dbd2797ec871e86566a6dfc0864e3}

\begin{CompactList}\small\item\em Restore factor I. \item\end{CompactList}\item 
\hypertarget{classdai_1_1DAIAlg_3ce97e9370f1cdc785526c1a6c1eaadf}{
void \hyperlink{classdai_1_1DAIAlg_3ce97e9370f1cdc785526c1a6c1eaadf}{restoreFactors} (const \hyperlink{classdai_1_1VarSet}{VarSet} \&ns)}
\label{classdai_1_1DAIAlg_3ce97e9370f1cdc785526c1a6c1eaadf}

\begin{CompactList}\small\item\em Restore Factors involving ns. \item\end{CompactList}\item 
\hypertarget{classdai_1_1DAIAlg_b7d537f1a9d116617d8dce722ce65dc0}{
void \hyperlink{classdai_1_1DAIAlg_b7d537f1a9d116617d8dce722ce65dc0}{clamp} (const \hyperlink{classdai_1_1Var}{Var} \&n, size\_\-t i, bool backup=false)}
\label{classdai_1_1DAIAlg_b7d537f1a9d116617d8dce722ce65dc0}

\begin{CompactList}\small\item\em Clamp variable n to value i (i.e. multiply with a Kronecker delta $\delta_{x_n, i}$). \item\end{CompactList}\item 
\hypertarget{classdai_1_1DAIAlg_7f0b8452352080a1e35ab9a68cb589fd}{
void \hyperlink{classdai_1_1DAIAlg_7f0b8452352080a1e35ab9a68cb589fd}{makeCavity} (size\_\-t i, bool backup=false)}
\label{classdai_1_1DAIAlg_7f0b8452352080a1e35ab9a68cb589fd}

\begin{CompactList}\small\item\em Set all factors interacting with var(i) to 1. \item\end{CompactList}\item 
\hypertarget{classdai_1_1DAIAlg_9348542c22d04ed804388f1fe3009fa3}{
\hyperlink{classdai_1_1FactorGraph}{FactorGraph} \& \hyperlink{classdai_1_1DAIAlg_9348542c22d04ed804388f1fe3009fa3}{fg} ()}
\label{classdai_1_1DAIAlg_9348542c22d04ed804388f1fe3009fa3}

\begin{CompactList}\small\item\em Get reference to underlying \hyperlink{classdai_1_1FactorGraph}{FactorGraph}. \item\end{CompactList}\item 
\hypertarget{classdai_1_1DAIAlg_35400e471b8c3c98bef6c74ceac8fa16}{
const \hyperlink{classdai_1_1FactorGraph}{FactorGraph} \& \hyperlink{classdai_1_1DAIAlg_35400e471b8c3c98bef6c74ceac8fa16}{fg} () const }
\label{classdai_1_1DAIAlg_35400e471b8c3c98bef6c74ceac8fa16}

\begin{CompactList}\small\item\em Get const reference to underlying \hyperlink{classdai_1_1FactorGraph}{FactorGraph}. \item\end{CompactList}\end{CompactItemize}
\begin{Indent}{\bf General InfAlg interface}\par
\begin{CompactItemize}
\item 
\hypertarget{classdai_1_1MR_8d3a4cdd6c8b0643f419ac4af425a648}{
virtual \hyperlink{classdai_1_1MR}{MR} $\ast$ \hyperlink{classdai_1_1MR_8d3a4cdd6c8b0643f419ac4af425a648}{clone} () const }
\label{classdai_1_1MR_8d3a4cdd6c8b0643f419ac4af425a648}

\begin{CompactList}\small\item\em Returns a pointer to a new, cloned copy of $\ast$this (i.e., virtual copy constructor). \item\end{CompactList}\item 
\hypertarget{classdai_1_1MR_824091e73486b3ed5ece0586362dc030}{
virtual \hyperlink{classdai_1_1MR}{MR} $\ast$ \hyperlink{classdai_1_1MR_824091e73486b3ed5ece0586362dc030}{create} () const }
\label{classdai_1_1MR_824091e73486b3ed5ece0586362dc030}

\begin{CompactList}\small\item\em Returns a pointer to a newly constructed object $\ast$this (i.e., virtual default constructor). \item\end{CompactList}\item 
\hypertarget{classdai_1_1MR_8c05671b584167d78fd556d849be938b}{
virtual std::string \hyperlink{classdai_1_1MR_8c05671b584167d78fd556d849be938b}{identify} () const }
\label{classdai_1_1MR_8c05671b584167d78fd556d849be938b}

\begin{CompactList}\small\item\em Identifies itself for logging purposes. \item\end{CompactList}\item 
\hypertarget{classdai_1_1MR_264f15595ab0257931cbe1cf19838583}{
virtual \hyperlink{classdai_1_1TFactor}{Factor} \hyperlink{classdai_1_1MR_264f15595ab0257931cbe1cf19838583}{belief} (const \hyperlink{classdai_1_1Var}{Var} \&n) const }
\label{classdai_1_1MR_264f15595ab0257931cbe1cf19838583}

\begin{CompactList}\small\item\em Returns the \char`\"{}belief\char`\"{} (i.e., approximate marginal probability distribution) of a variable. \item\end{CompactList}\item 
\hypertarget{classdai_1_1MR_2b0bc5b3f3ddab92fd9029e4b21c6e04}{
virtual \hyperlink{classdai_1_1TFactor}{Factor} \hyperlink{classdai_1_1MR_2b0bc5b3f3ddab92fd9029e4b21c6e04}{belief} (const \hyperlink{classdai_1_1VarSet}{VarSet} \&) const }
\label{classdai_1_1MR_2b0bc5b3f3ddab92fd9029e4b21c6e04}

\begin{CompactList}\small\item\em Returns the \char`\"{}belief\char`\"{} (i.e., approximate marginal probability distribution) of a set of variables. \item\end{CompactList}\item 
\hypertarget{classdai_1_1MR_fdeba6c62b51ad80f13ac75bb7ffcfb5}{
virtual std::vector$<$ \hyperlink{classdai_1_1TFactor}{Factor} $>$ \hyperlink{classdai_1_1MR_fdeba6c62b51ad80f13ac75bb7ffcfb5}{beliefs} () const }
\label{classdai_1_1MR_fdeba6c62b51ad80f13ac75bb7ffcfb5}

\begin{CompactList}\small\item\em Returns all \char`\"{}beliefs\char`\"{} (i.e., approximate marginal probability distribution) calculated by the algorithm. \item\end{CompactList}\item 
\hypertarget{classdai_1_1MR_f1599e561432596af2d2b4ec423e0a8d}{
virtual \hyperlink{namespacedai_e7d0472fdc89a8635825d01940e91cbf}{Real} \hyperlink{classdai_1_1MR_f1599e561432596af2d2b4ec423e0a8d}{logZ} () const }
\label{classdai_1_1MR_f1599e561432596af2d2b4ec423e0a8d}

\begin{CompactList}\small\item\em Returns the logarithm of the (approximated) partition sum (normalizing constant of the factor graph). \item\end{CompactList}\item 
virtual void \hyperlink{classdai_1_1MR_859f5c780ec490232dc7a2b8f11da38b}{init} ()
\begin{CompactList}\small\item\em Initializes all data structures of the approximate inference algorithm. \item\end{CompactList}\item 
virtual void \hyperlink{classdai_1_1MR_da0e0829e87b541633dbb6078529c21d}{init} (const \hyperlink{classdai_1_1VarSet}{VarSet} \&)
\begin{CompactList}\small\item\em Initializes all data structures corresponding to some set of variables. \item\end{CompactList}\item 
\hypertarget{classdai_1_1MR_bc686f1fcd4b91c6592365db752c413e}{
virtual double \hyperlink{classdai_1_1MR_bc686f1fcd4b91c6592365db752c413e}{run} ()}
\label{classdai_1_1MR_bc686f1fcd4b91c6592365db752c413e}

\begin{CompactList}\small\item\em Runs the approximate inference algorithm. \item\end{CompactList}\item 
virtual double \hyperlink{classdai_1_1MR_a55d0a62912e9fe8a685157cfa309918}{maxDiff} () const 
\item 
virtual size\_\-t \hyperlink{classdai_1_1MR_6a199aa1d43b3c143a4b631735f53ee3}{Iterations} () const 
\end{CompactItemize}
\end{Indent}
\subsection*{Public Attributes}
\begin{CompactItemize}
\item 
\hypertarget{classdai_1_1MR_4d4ad4e50b277d36d33f3cdb86644fc0}{
struct \hyperlink{structdai_1_1MR_1_1Properties}{dai::MR::Properties} \hyperlink{classdai_1_1MR_4d4ad4e50b277d36d33f3cdb86644fc0}{props}}
\label{classdai_1_1MR_4d4ad4e50b277d36d33f3cdb86644fc0}

\begin{CompactList}\small\item\em Parameters of this inference algorithm. \item\end{CompactList}\end{CompactItemize}
\subsection*{Static Public Attributes}
\begin{CompactItemize}
\item 
\hypertarget{classdai_1_1MR_bc953e4a7a7d821f25e0ccbcdf8d304f}{
static const char $\ast$ \hyperlink{classdai_1_1MR_bc953e4a7a7d821f25e0ccbcdf8d304f}{Name} = \char`\"{}MR\char`\"{}}
\label{classdai_1_1MR_bc953e4a7a7d821f25e0ccbcdf8d304f}

\begin{CompactList}\small\item\em Name of this inference method. \item\end{CompactList}\end{CompactItemize}
\subsection*{Classes}
\begin{CompactItemize}
\item 
struct \hyperlink{structdai_1_1MR_1_1Properties}{Properties}
\begin{CompactList}\small\item\em Parameters of this inference algorithm. \item\end{CompactList}\end{CompactItemize}


\subsection{Member Function Documentation}
\hypertarget{classdai_1_1MR_859f5c780ec490232dc7a2b8f11da38b}{
\index{dai::MR@{dai::MR}!init@{init}}
\index{init@{init}!dai::MR@{dai::MR}}
\subsubsection[init]{\setlength{\rightskip}{0pt plus 5cm}virtual void dai::MR::init ()\hspace{0.3cm}{\tt  \mbox{[}inline, virtual\mbox{]}}}}
\label{classdai_1_1MR_859f5c780ec490232dc7a2b8f11da38b}


Initializes all data structures of the approximate inference algorithm. 

This method should be called at least once before \hyperlink{classdai_1_1MR_bc686f1fcd4b91c6592365db752c413e}{run()} is called 

Implements \hyperlink{classdai_1_1InfAlg_99dd53d1aaccf09a4b977a49a983cc85}{dai::InfAlg}.\hypertarget{classdai_1_1MR_da0e0829e87b541633dbb6078529c21d}{
\index{dai::MR@{dai::MR}!init@{init}}
\index{init@{init}!dai::MR@{dai::MR}}
\subsubsection[init]{\setlength{\rightskip}{0pt plus 5cm}virtual void dai::MR::init (const {\bf VarSet} \& {\em ns})\hspace{0.3cm}{\tt  \mbox{[}inline, virtual\mbox{]}}}}
\label{classdai_1_1MR_da0e0829e87b541633dbb6078529c21d}


Initializes all data structures corresponding to some set of variables. 

This method can be used to do a partial initialization after a part of the factor graph has changed. Instead of initializing all data structures, it only initializes those involving the variables in ns. 

Implements \hyperlink{classdai_1_1InfAlg_7d006e89e01a2f3e2a40b0f7f6e37ae5}{dai::InfAlg}.\hypertarget{classdai_1_1MR_a55d0a62912e9fe8a685157cfa309918}{
\index{dai::MR@{dai::MR}!maxDiff@{maxDiff}}
\index{maxDiff@{maxDiff}!dai::MR@{dai::MR}}
\subsubsection[maxDiff]{\setlength{\rightskip}{0pt plus 5cm}virtual double dai::MR::maxDiff () const\hspace{0.3cm}{\tt  \mbox{[}inline, virtual\mbox{]}}}}
\label{classdai_1_1MR_a55d0a62912e9fe8a685157cfa309918}


Return maximum difference between single node beliefs in the last pass \begin{Desc}
\item[Exceptions:]
\begin{description}
\item[{\em \hyperlink{classdai_1_1Exception}{Exception}}]if not implemented/supported \end{description}
\end{Desc}


Implements \hyperlink{classdai_1_1InfAlg_7e1ca7da15403d5d2af4a855186c0b46}{dai::InfAlg}.\hypertarget{classdai_1_1MR_6a199aa1d43b3c143a4b631735f53ee3}{
\index{dai::MR@{dai::MR}!Iterations@{Iterations}}
\index{Iterations@{Iterations}!dai::MR@{dai::MR}}
\subsubsection[Iterations]{\setlength{\rightskip}{0pt plus 5cm}virtual size\_\-t dai::MR::Iterations () const\hspace{0.3cm}{\tt  \mbox{[}inline, virtual\mbox{]}}}}
\label{classdai_1_1MR_6a199aa1d43b3c143a4b631735f53ee3}


Return number of passes over the factorgraph \begin{Desc}
\item[Exceptions:]
\begin{description}
\item[{\em \hyperlink{classdai_1_1Exception}{Exception}}]if not implemented/supported \end{description}
\end{Desc}


Implements \hyperlink{classdai_1_1InfAlg_7a93807863cc0a2025c1a78bdf1e14b8}{dai::InfAlg}.

The documentation for this class was generated from the following files:\begin{CompactItemize}
\item 
include/dai/\hyperlink{mr_8h}{mr.h}\item 
src/mr.cpp\end{CompactItemize}
