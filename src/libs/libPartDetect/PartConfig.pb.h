// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PartConfig.proto

#ifndef PROTOBUF_PartConfig_2eproto__INCLUDED
#define PROTOBUF_PartConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PartConfig_2eproto();
void protobuf_AssignDesc_PartConfig_2eproto();
void protobuf_ShutdownFile_PartConfig_2eproto();

class PartDef;
class Joint;
class AppearanceGroup;
class PartConfig;

// ===================================================================

class PartDef : public ::google::protobuf::Message {
 public:
  PartDef();
  virtual ~PartDef();
  
  PartDef(const PartDef& from);
  
  inline PartDef& operator=(const PartDef& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PartDef& default_instance();
  
  void Swap(PartDef* other);
  
  // implements Message ----------------------------------------------
  
  PartDef* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PartDef& from);
  void MergeFrom(const PartDef& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 part_id = 1;
  inline bool has_part_id() const;
  inline void clear_part_id();
  static const int kPartIdFieldNumber = 1;
  inline ::google::protobuf::int32 part_id() const;
  inline void set_part_id(::google::protobuf::int32 value);
  
  // repeated int32 part_pos = 2;
  inline int part_pos_size() const;
  inline void clear_part_pos();
  static const int kPartPosFieldNumber = 2;
  inline ::google::protobuf::int32 part_pos(int index) const;
  inline void set_part_pos(int index, ::google::protobuf::int32 value);
  inline void add_part_pos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      part_pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_part_pos();
  
  // optional int32 ref_pos = 15;
  inline bool has_ref_pos() const;
  inline void clear_ref_pos();
  static const int kRefPosFieldNumber = 15;
  inline ::google::protobuf::int32 ref_pos() const;
  inline void set_ref_pos(::google::protobuf::int32 value);
  
  // repeated int32 part_x_axis_from = 4;
  inline int part_x_axis_from_size() const;
  inline void clear_part_x_axis_from();
  static const int kPartXAxisFromFieldNumber = 4;
  inline ::google::protobuf::int32 part_x_axis_from(int index) const;
  inline void set_part_x_axis_from(int index, ::google::protobuf::int32 value);
  inline void add_part_x_axis_from(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      part_x_axis_from() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_part_x_axis_from();
  
  // repeated int32 part_x_axis_to = 5;
  inline int part_x_axis_to_size() const;
  inline void clear_part_x_axis_to();
  static const int kPartXAxisToFieldNumber = 5;
  inline ::google::protobuf::int32 part_x_axis_to(int index) const;
  inline void set_part_x_axis_to(int index, ::google::protobuf::int32 value);
  inline void add_part_x_axis_to(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      part_x_axis_to() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_part_x_axis_to();
  
  // optional float part_x_axis_offset = 6 [default = 0];
  inline bool has_part_x_axis_offset() const;
  inline void clear_part_x_axis_offset();
  static const int kPartXAxisOffsetFieldNumber = 6;
  inline float part_x_axis_offset() const;
  inline void set_part_x_axis_offset(float value);
  
  // optional float ext_x_pos = 7 [default = 0];
  inline bool has_ext_x_pos() const;
  inline void clear_ext_x_pos();
  static const int kExtXPosFieldNumber = 7;
  inline float ext_x_pos() const;
  inline void set_ext_x_pos(float value);
  
  // optional float ext_x_neg = 8 [default = 0];
  inline bool has_ext_x_neg() const;
  inline void clear_ext_x_neg();
  static const int kExtXNegFieldNumber = 8;
  inline float ext_x_neg() const;
  inline void set_ext_x_neg(float value);
  
  // optional float ext_y_pos = 9 [default = 0];
  inline bool has_ext_y_pos() const;
  inline void clear_ext_y_pos();
  static const int kExtYPosFieldNumber = 9;
  inline float ext_y_pos() const;
  inline void set_ext_y_pos(float value);
  
  // optional float ext_y_neg = 10 [default = 0];
  inline bool has_ext_y_neg() const;
  inline void clear_ext_y_neg();
  static const int kExtYNegFieldNumber = 10;
  inline float ext_y_neg() const;
  inline void set_ext_y_neg(float value);
  
  // optional bool is_root = 11 [default = false];
  inline bool has_is_root() const;
  inline void clear_is_root();
  static const int kIsRootFieldNumber = 11;
  inline bool is_root() const;
  inline void set_is_root(bool value);
  
  // optional bool is_detect = 12 [default = true];
  inline bool has_is_detect() const;
  inline void clear_is_detect();
  static const int kIsDetectFieldNumber = 12;
  inline bool is_detect() const;
  inline void set_is_detect(bool value);
  
  // optional bool is_upright = 13 [default = false];
  inline bool has_is_upright() const;
  inline void clear_is_upright();
  static const int kIsUprightFieldNumber = 13;
  inline bool is_upright() const;
  inline void set_is_upright(bool value);
  
  // optional bool has_mult_types = 14 [default = false];
  inline bool has_has_mult_types() const;
  inline void clear_has_mult_types();
  static const int kHasMultTypesFieldNumber = 14;
  inline bool has_mult_types() const;
  inline void set_has_mult_types(bool value);
  
  // optional int32 max_num_part_types = 16 [default = 1];
  inline bool has_max_num_part_types() const;
  inline void clear_max_num_part_types();
  static const int kMaxNumPartTypesFieldNumber = 16;
  inline ::google::protobuf::int32 max_num_part_types() const;
  inline void set_max_num_part_types(::google::protobuf::int32 value);
  
  // optional int32 num_pred_part_types = 20 [default = 1];
  inline bool has_num_pred_part_types() const;
  inline void clear_num_pred_part_types();
  static const int kNumPredPartTypesFieldNumber = 20;
  inline ::google::protobuf::int32 num_pred_part_types() const;
  inline void set_num_pred_part_types(::google::protobuf::int32 value);
  
  // optional float ext_x_pos_vis = 18 [default = 0];
  inline bool has_ext_x_pos_vis() const;
  inline void clear_ext_x_pos_vis();
  static const int kExtXPosVisFieldNumber = 18;
  inline float ext_x_pos_vis() const;
  inline void set_ext_x_pos_vis(float value);
  
  // optional float ext_x_neg_vis = 19 [default = 0];
  inline bool has_ext_x_neg_vis() const;
  inline void clear_ext_x_neg_vis();
  static const int kExtXNegVisFieldNumber = 19;
  inline float ext_x_neg_vis() const;
  inline void set_ext_x_neg_vis(float value);
  
  // @@protoc_insertion_point(class_scope:PartDef)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 part_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > part_pos_;
  ::google::protobuf::int32 ref_pos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > part_x_axis_from_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > part_x_axis_to_;
  float part_x_axis_offset_;
  float ext_x_pos_;
  float ext_x_neg_;
  float ext_y_pos_;
  float ext_y_neg_;
  bool is_root_;
  bool is_detect_;
  bool is_upright_;
  bool has_mult_types_;
  ::google::protobuf::int32 max_num_part_types_;
  ::google::protobuf::int32 num_pred_part_types_;
  float ext_x_pos_vis_;
  float ext_x_neg_vis_;
  friend void  protobuf_AddDesc_PartConfig_2eproto();
  friend void protobuf_AssignDesc_PartConfig_2eproto();
  friend void protobuf_ShutdownFile_PartConfig_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PartDef* default_instance_;
};
// -------------------------------------------------------------------

class Joint : public ::google::protobuf::Message {
 public:
  Joint();
  virtual ~Joint();
  
  Joint(const Joint& from);
  
  inline Joint& operator=(const Joint& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Joint& default_instance();
  
  void Swap(Joint* other);
  
  // implements Message ----------------------------------------------
  
  Joint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Joint& from);
  void MergeFrom(const Joint& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 child_idx = 1;
  inline bool has_child_idx() const;
  inline void clear_child_idx();
  static const int kChildIdxFieldNumber = 1;
  inline ::google::protobuf::int32 child_idx() const;
  inline void set_child_idx(::google::protobuf::int32 value);
  
  // optional int32 parent_idx = 2;
  inline bool has_parent_idx() const;
  inline void clear_parent_idx();
  static const int kParentIdxFieldNumber = 2;
  inline ::google::protobuf::int32 parent_idx() const;
  inline void set_parent_idx(::google::protobuf::int32 value);
  
  // optional string type = 3 [default = "Gaussian"];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  
  // repeated int32 joint_pos = 4;
  inline int joint_pos_size() const;
  inline void clear_joint_pos();
  static const int kJointPosFieldNumber = 4;
  inline ::google::protobuf::int32 joint_pos(int index) const;
  inline void set_joint_pos(int index, ::google::protobuf::int32 value);
  inline void add_joint_pos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      joint_pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_joint_pos();
  
  // optional uint32 num_joint_types = 5 [default = 1];
  inline bool has_num_joint_types() const;
  inline void clear_num_joint_types();
  static const int kNumJointTypesFieldNumber = 5;
  inline ::google::protobuf::uint32 num_joint_types() const;
  inline void set_num_joint_types(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:Joint)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 child_idx_;
  ::google::protobuf::int32 parent_idx_;
  ::std::string* type_;
  static const ::std::string _default_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > joint_pos_;
  ::google::protobuf::uint32 num_joint_types_;
  friend void  protobuf_AddDesc_PartConfig_2eproto();
  friend void protobuf_AssignDesc_PartConfig_2eproto();
  friend void protobuf_ShutdownFile_PartConfig_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Joint* default_instance_;
};
// -------------------------------------------------------------------

class AppearanceGroup : public ::google::protobuf::Message {
 public:
  AppearanceGroup();
  virtual ~AppearanceGroup();
  
  AppearanceGroup(const AppearanceGroup& from);
  
  inline AppearanceGroup& operator=(const AppearanceGroup& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AppearanceGroup& default_instance();
  
  void Swap(AppearanceGroup* other);
  
  // implements Message ----------------------------------------------
  
  AppearanceGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppearanceGroup& from);
  void MergeFrom(const AppearanceGroup& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 part_id = 1;
  inline int part_id_size() const;
  inline void clear_part_id();
  static const int kPartIdFieldNumber = 1;
  inline ::google::protobuf::int32 part_id(int index) const;
  inline void set_part_id(int index, ::google::protobuf::int32 value);
  inline void add_part_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      part_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_part_id();
  
  // @@protoc_insertion_point(class_scope:AppearanceGroup)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > part_id_;
  friend void  protobuf_AddDesc_PartConfig_2eproto();
  friend void protobuf_AssignDesc_PartConfig_2eproto();
  friend void protobuf_ShutdownFile_PartConfig_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static AppearanceGroup* default_instance_;
};
// -------------------------------------------------------------------

class PartConfig : public ::google::protobuf::Message {
 public:
  PartConfig();
  virtual ~PartConfig();
  
  PartConfig(const PartConfig& from);
  
  inline PartConfig& operator=(const PartConfig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PartConfig& default_instance();
  
  void Swap(PartConfig* other);
  
  // implements Message ----------------------------------------------
  
  PartConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PartConfig& from);
  void MergeFrom(const PartConfig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PartDef part = 1;
  inline int part_size() const;
  inline void clear_part();
  static const int kPartFieldNumber = 1;
  inline const ::PartDef& part(int index) const;
  inline ::PartDef* mutable_part(int index);
  inline ::PartDef* add_part();
  inline const ::google::protobuf::RepeatedPtrField< ::PartDef >&
      part() const;
  inline ::google::protobuf::RepeatedPtrField< ::PartDef >*
      mutable_part();
  
  // repeated .Joint joint = 2;
  inline int joint_size() const;
  inline void clear_joint();
  static const int kJointFieldNumber = 2;
  inline const ::Joint& joint(int index) const;
  inline ::Joint* mutable_joint(int index);
  inline ::Joint* add_joint();
  inline const ::google::protobuf::RepeatedPtrField< ::Joint >&
      joint() const;
  inline ::google::protobuf::RepeatedPtrField< ::Joint >*
      mutable_joint();
  
  // repeated .AppearanceGroup app_group = 3;
  inline int app_group_size() const;
  inline void clear_app_group();
  static const int kAppGroupFieldNumber = 3;
  inline const ::AppearanceGroup& app_group(int index) const;
  inline ::AppearanceGroup* mutable_app_group(int index);
  inline ::AppearanceGroup* add_app_group();
  inline const ::google::protobuf::RepeatedPtrField< ::AppearanceGroup >&
      app_group() const;
  inline ::google::protobuf::RepeatedPtrField< ::AppearanceGroup >*
      mutable_app_group();
  
  // @@protoc_insertion_point(class_scope:PartConfig)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PartDef > part_;
  ::google::protobuf::RepeatedPtrField< ::Joint > joint_;
  ::google::protobuf::RepeatedPtrField< ::AppearanceGroup > app_group_;
  friend void  protobuf_AddDesc_PartConfig_2eproto();
  friend void protobuf_AssignDesc_PartConfig_2eproto();
  friend void protobuf_ShutdownFile_PartConfig_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PartConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// PartDef

// optional int32 part_id = 1;
inline bool PartDef::has_part_id() const {
  return _has_bit(0);
}
inline void PartDef::clear_part_id() {
  part_id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 PartDef::part_id() const {
  return part_id_;
}
inline void PartDef::set_part_id(::google::protobuf::int32 value) {
  _set_bit(0);
  part_id_ = value;
}

// repeated int32 part_pos = 2;
inline int PartDef::part_pos_size() const {
  return part_pos_.size();
}
inline void PartDef::clear_part_pos() {
  part_pos_.Clear();
}
inline ::google::protobuf::int32 PartDef::part_pos(int index) const {
  return part_pos_.Get(index);
}
inline void PartDef::set_part_pos(int index, ::google::protobuf::int32 value) {
  part_pos_.Set(index, value);
}
inline void PartDef::add_part_pos(::google::protobuf::int32 value) {
  part_pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PartDef::part_pos() const {
  return part_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PartDef::mutable_part_pos() {
  return &part_pos_;
}

// optional int32 ref_pos = 15;
inline bool PartDef::has_ref_pos() const {
  return _has_bit(2);
}
inline void PartDef::clear_ref_pos() {
  ref_pos_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 PartDef::ref_pos() const {
  return ref_pos_;
}
inline void PartDef::set_ref_pos(::google::protobuf::int32 value) {
  _set_bit(2);
  ref_pos_ = value;
}

// repeated int32 part_x_axis_from = 4;
inline int PartDef::part_x_axis_from_size() const {
  return part_x_axis_from_.size();
}
inline void PartDef::clear_part_x_axis_from() {
  part_x_axis_from_.Clear();
}
inline ::google::protobuf::int32 PartDef::part_x_axis_from(int index) const {
  return part_x_axis_from_.Get(index);
}
inline void PartDef::set_part_x_axis_from(int index, ::google::protobuf::int32 value) {
  part_x_axis_from_.Set(index, value);
}
inline void PartDef::add_part_x_axis_from(::google::protobuf::int32 value) {
  part_x_axis_from_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PartDef::part_x_axis_from() const {
  return part_x_axis_from_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PartDef::mutable_part_x_axis_from() {
  return &part_x_axis_from_;
}

// repeated int32 part_x_axis_to = 5;
inline int PartDef::part_x_axis_to_size() const {
  return part_x_axis_to_.size();
}
inline void PartDef::clear_part_x_axis_to() {
  part_x_axis_to_.Clear();
}
inline ::google::protobuf::int32 PartDef::part_x_axis_to(int index) const {
  return part_x_axis_to_.Get(index);
}
inline void PartDef::set_part_x_axis_to(int index, ::google::protobuf::int32 value) {
  part_x_axis_to_.Set(index, value);
}
inline void PartDef::add_part_x_axis_to(::google::protobuf::int32 value) {
  part_x_axis_to_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PartDef::part_x_axis_to() const {
  return part_x_axis_to_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PartDef::mutable_part_x_axis_to() {
  return &part_x_axis_to_;
}

// optional float part_x_axis_offset = 6 [default = 0];
inline bool PartDef::has_part_x_axis_offset() const {
  return _has_bit(5);
}
inline void PartDef::clear_part_x_axis_offset() {
  part_x_axis_offset_ = 0;
  _clear_bit(5);
}
inline float PartDef::part_x_axis_offset() const {
  return part_x_axis_offset_;
}
inline void PartDef::set_part_x_axis_offset(float value) {
  _set_bit(5);
  part_x_axis_offset_ = value;
}

// optional float ext_x_pos = 7 [default = 0];
inline bool PartDef::has_ext_x_pos() const {
  return _has_bit(6);
}
inline void PartDef::clear_ext_x_pos() {
  ext_x_pos_ = 0;
  _clear_bit(6);
}
inline float PartDef::ext_x_pos() const {
  return ext_x_pos_;
}
inline void PartDef::set_ext_x_pos(float value) {
  _set_bit(6);
  ext_x_pos_ = value;
}

// optional float ext_x_neg = 8 [default = 0];
inline bool PartDef::has_ext_x_neg() const {
  return _has_bit(7);
}
inline void PartDef::clear_ext_x_neg() {
  ext_x_neg_ = 0;
  _clear_bit(7);
}
inline float PartDef::ext_x_neg() const {
  return ext_x_neg_;
}
inline void PartDef::set_ext_x_neg(float value) {
  _set_bit(7);
  ext_x_neg_ = value;
}

// optional float ext_y_pos = 9 [default = 0];
inline bool PartDef::has_ext_y_pos() const {
  return _has_bit(8);
}
inline void PartDef::clear_ext_y_pos() {
  ext_y_pos_ = 0;
  _clear_bit(8);
}
inline float PartDef::ext_y_pos() const {
  return ext_y_pos_;
}
inline void PartDef::set_ext_y_pos(float value) {
  _set_bit(8);
  ext_y_pos_ = value;
}

// optional float ext_y_neg = 10 [default = 0];
inline bool PartDef::has_ext_y_neg() const {
  return _has_bit(9);
}
inline void PartDef::clear_ext_y_neg() {
  ext_y_neg_ = 0;
  _clear_bit(9);
}
inline float PartDef::ext_y_neg() const {
  return ext_y_neg_;
}
inline void PartDef::set_ext_y_neg(float value) {
  _set_bit(9);
  ext_y_neg_ = value;
}

// optional bool is_root = 11 [default = false];
inline bool PartDef::has_is_root() const {
  return _has_bit(10);
}
inline void PartDef::clear_is_root() {
  is_root_ = false;
  _clear_bit(10);
}
inline bool PartDef::is_root() const {
  return is_root_;
}
inline void PartDef::set_is_root(bool value) {
  _set_bit(10);
  is_root_ = value;
}

// optional bool is_detect = 12 [default = true];
inline bool PartDef::has_is_detect() const {
  return _has_bit(11);
}
inline void PartDef::clear_is_detect() {
  is_detect_ = true;
  _clear_bit(11);
}
inline bool PartDef::is_detect() const {
  return is_detect_;
}
inline void PartDef::set_is_detect(bool value) {
  _set_bit(11);
  is_detect_ = value;
}

// optional bool is_upright = 13 [default = false];
inline bool PartDef::has_is_upright() const {
  return _has_bit(12);
}
inline void PartDef::clear_is_upright() {
  is_upright_ = false;
  _clear_bit(12);
}
inline bool PartDef::is_upright() const {
  return is_upright_;
}
inline void PartDef::set_is_upright(bool value) {
  _set_bit(12);
  is_upright_ = value;
}

// optional bool has_mult_types = 14 [default = false];
inline bool PartDef::has_has_mult_types() const {
  return _has_bit(13);
}
inline void PartDef::clear_has_mult_types() {
  has_mult_types_ = false;
  _clear_bit(13);
}
inline bool PartDef::has_mult_types() const {
  return has_mult_types_;
}
inline void PartDef::set_has_mult_types(bool value) {
  _set_bit(13);
  has_mult_types_ = value;
}

// optional int32 max_num_part_types = 16 [default = 1];
inline bool PartDef::has_max_num_part_types() const {
  return _has_bit(14);
}
inline void PartDef::clear_max_num_part_types() {
  max_num_part_types_ = 1;
  _clear_bit(14);
}
inline ::google::protobuf::int32 PartDef::max_num_part_types() const {
  return max_num_part_types_;
}
inline void PartDef::set_max_num_part_types(::google::protobuf::int32 value) {
  _set_bit(14);
  max_num_part_types_ = value;
}

// optional int32 num_pred_part_types = 20 [default = 1];
inline bool PartDef::has_num_pred_part_types() const {
  return _has_bit(15);
}
inline void PartDef::clear_num_pred_part_types() {
  num_pred_part_types_ = 1;
  _clear_bit(15);
}
inline ::google::protobuf::int32 PartDef::num_pred_part_types() const {
  return num_pred_part_types_;
}
inline void PartDef::set_num_pred_part_types(::google::protobuf::int32 value) {
  _set_bit(15);
  num_pred_part_types_ = value;
}

// optional float ext_x_pos_vis = 18 [default = 0];
inline bool PartDef::has_ext_x_pos_vis() const {
  return _has_bit(16);
}
inline void PartDef::clear_ext_x_pos_vis() {
  ext_x_pos_vis_ = 0;
  _clear_bit(16);
}
inline float PartDef::ext_x_pos_vis() const {
  return ext_x_pos_vis_;
}
inline void PartDef::set_ext_x_pos_vis(float value) {
  _set_bit(16);
  ext_x_pos_vis_ = value;
}

// optional float ext_x_neg_vis = 19 [default = 0];
inline bool PartDef::has_ext_x_neg_vis() const {
  return _has_bit(17);
}
inline void PartDef::clear_ext_x_neg_vis() {
  ext_x_neg_vis_ = 0;
  _clear_bit(17);
}
inline float PartDef::ext_x_neg_vis() const {
  return ext_x_neg_vis_;
}
inline void PartDef::set_ext_x_neg_vis(float value) {
  _set_bit(17);
  ext_x_neg_vis_ = value;
}

// -------------------------------------------------------------------

// Joint

// optional int32 child_idx = 1;
inline bool Joint::has_child_idx() const {
  return _has_bit(0);
}
inline void Joint::clear_child_idx() {
  child_idx_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 Joint::child_idx() const {
  return child_idx_;
}
inline void Joint::set_child_idx(::google::protobuf::int32 value) {
  _set_bit(0);
  child_idx_ = value;
}

// optional int32 parent_idx = 2;
inline bool Joint::has_parent_idx() const {
  return _has_bit(1);
}
inline void Joint::clear_parent_idx() {
  parent_idx_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 Joint::parent_idx() const {
  return parent_idx_;
}
inline void Joint::set_parent_idx(::google::protobuf::int32 value) {
  _set_bit(1);
  parent_idx_ = value;
}

// optional string type = 3 [default = "Gaussian"];
inline bool Joint::has_type() const {
  return _has_bit(2);
}
inline void Joint::clear_type() {
  if (type_ != &_default_type_) {
    type_->assign(_default_type_);
  }
  _clear_bit(2);
}
inline const ::std::string& Joint::type() const {
  return *type_;
}
inline void Joint::set_type(const ::std::string& value) {
  _set_bit(2);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void Joint::set_type(const char* value) {
  _set_bit(2);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void Joint::set_type(const char* value, size_t size) {
  _set_bit(2);
  if (type_ == &_default_type_) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Joint::mutable_type() {
  _set_bit(2);
  if (type_ == &_default_type_) {
    type_ = new ::std::string(_default_type_);
  }
  return type_;
}

// repeated int32 joint_pos = 4;
inline int Joint::joint_pos_size() const {
  return joint_pos_.size();
}
inline void Joint::clear_joint_pos() {
  joint_pos_.Clear();
}
inline ::google::protobuf::int32 Joint::joint_pos(int index) const {
  return joint_pos_.Get(index);
}
inline void Joint::set_joint_pos(int index, ::google::protobuf::int32 value) {
  joint_pos_.Set(index, value);
}
inline void Joint::add_joint_pos(::google::protobuf::int32 value) {
  joint_pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Joint::joint_pos() const {
  return joint_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Joint::mutable_joint_pos() {
  return &joint_pos_;
}

// optional uint32 num_joint_types = 5 [default = 1];
inline bool Joint::has_num_joint_types() const {
  return _has_bit(4);
}
inline void Joint::clear_num_joint_types() {
  num_joint_types_ = 1u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 Joint::num_joint_types() const {
  return num_joint_types_;
}
inline void Joint::set_num_joint_types(::google::protobuf::uint32 value) {
  _set_bit(4);
  num_joint_types_ = value;
}

// -------------------------------------------------------------------

// AppearanceGroup

// repeated int32 part_id = 1;
inline int AppearanceGroup::part_id_size() const {
  return part_id_.size();
}
inline void AppearanceGroup::clear_part_id() {
  part_id_.Clear();
}
inline ::google::protobuf::int32 AppearanceGroup::part_id(int index) const {
  return part_id_.Get(index);
}
inline void AppearanceGroup::set_part_id(int index, ::google::protobuf::int32 value) {
  part_id_.Set(index, value);
}
inline void AppearanceGroup::add_part_id(::google::protobuf::int32 value) {
  part_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AppearanceGroup::part_id() const {
  return part_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AppearanceGroup::mutable_part_id() {
  return &part_id_;
}

// -------------------------------------------------------------------

// PartConfig

// repeated .PartDef part = 1;
inline int PartConfig::part_size() const {
  return part_.size();
}
inline void PartConfig::clear_part() {
  part_.Clear();
}
inline const ::PartDef& PartConfig::part(int index) const {
  return part_.Get(index);
}
inline ::PartDef* PartConfig::mutable_part(int index) {
  return part_.Mutable(index);
}
inline ::PartDef* PartConfig::add_part() {
  return part_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PartDef >&
PartConfig::part() const {
  return part_;
}
inline ::google::protobuf::RepeatedPtrField< ::PartDef >*
PartConfig::mutable_part() {
  return &part_;
}

// repeated .Joint joint = 2;
inline int PartConfig::joint_size() const {
  return joint_.size();
}
inline void PartConfig::clear_joint() {
  joint_.Clear();
}
inline const ::Joint& PartConfig::joint(int index) const {
  return joint_.Get(index);
}
inline ::Joint* PartConfig::mutable_joint(int index) {
  return joint_.Mutable(index);
}
inline ::Joint* PartConfig::add_joint() {
  return joint_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Joint >&
PartConfig::joint() const {
  return joint_;
}
inline ::google::protobuf::RepeatedPtrField< ::Joint >*
PartConfig::mutable_joint() {
  return &joint_;
}

// repeated .AppearanceGroup app_group = 3;
inline int PartConfig::app_group_size() const {
  return app_group_.size();
}
inline void PartConfig::clear_app_group() {
  app_group_.Clear();
}
inline const ::AppearanceGroup& PartConfig::app_group(int index) const {
  return app_group_.Get(index);
}
inline ::AppearanceGroup* PartConfig::mutable_app_group(int index) {
  return app_group_.Mutable(index);
}
inline ::AppearanceGroup* PartConfig::add_app_group() {
  return app_group_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AppearanceGroup >&
PartConfig::app_group() const {
  return app_group_;
}
inline ::google::protobuf::RepeatedPtrField< ::AppearanceGroup >*
PartConfig::mutable_app_group() {
  return &app_group_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PartConfig_2eproto__INCLUDED
